@model UWUesports.Web.ViewModels.PaginatedList<UWUesports.Web.Models.ApplicationUser>

<h2>Lista użytkowników</h2>

<a asp-action="Create" class="btn btn-success mb-3">+ Dodaj Użytkownika</a>

<div>
    <form method="get" asp-action="Index" id="searchForm" class="mb-3 d-flex align-items-center gap-2" style="max-width: 400px;">
        <input type="text" name="search" placeholder="Szukaj..."
               value="@ViewData["search"]" class="form-control"
               onchange="document.getElementById('searchForm').submit()" />
    </form>
</div>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Nick</th>
            <th>Email</th>
            <th>Role</th>
            <th>Role globalne</th>
            <th>Drużyny</th>
            <th>Akcje</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Items)
        {
            <tr>
                <td>@user.Nickname</td>
                <td>@user.Email</td>
                <td>
                    @if (user.RoleAssignments != null && user.RoleAssignments.Any())
                    {
                        <ul>
                            @foreach (var ra in user.RoleAssignments)
                            {
                                <li>@ra.Role?.Name - @ra.Organization?.Name</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <span>Brak przypisanych ról</span>
                    }
                </td>
                <td>
                    @if (user.GlobalRoles != null && user.GlobalRoles.Any())
                    {
                        <span>@string.Join(", ", user.GlobalRoles)</span>
                    }
                    else
                    {
                        <span>Brak ról globalnych</span>
                    }
                </td>
                <td>
                    @if (user.TeamPlayers != null && user.TeamPlayers.Any())
                    {
                        <ul>
                            @foreach (var tp in user.TeamPlayers)
                            {
                                <li>@tp.Team?.Name (@tp.Team?.Organization?.Name)</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <span>Brak drużyn</span>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-warning">Edytuj</a>
                    <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal-@user.Id">
                        Usuń
                    </button>

                    <div class="modal fade" id="deleteModal-@user.Id" tabindex="-1" aria-labelledby="deleteModalLabel-@user.Id" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="deleteModalLabel-@user.Id">Potwierdź usunięcie</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Zamknij"></button>
                                </div>
                                <div class="modal-body">
                                    Czy na pewno chcesz usunąć gracza <strong>@user.Nickname</strong>?
                                </div>
                                <div class="modal-footer">
                                    <form asp-action="DeleteConfirmed" asp-route-id="@user.Id" method="post">
                                        @Html.AntiForgeryToken()
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                                        <button type="submit" class="btn btn-danger">Usuń</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    int currentPage = Model.PageNumber;
    int totalPages = Model.TotalPages;
    int pageSize = Model.PageSize;
    int[] allowedPageSizes = (int[])ViewData["AllowedPageSizes"];
}

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center align-items-center">
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-pageSize="@pageSize" tabindex="-1">&lt; Poprzednia</a>
        </li>

        <li class="page-item disabled">
            <span class="page-link">
                Strona @currentPage z @totalPages
            </span>
        </li>

        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-pageSize="@pageSize">&gt; Następna</a>
        </li>

        <li class="page-item ms-3">
            <form method="get" asp-action="Index" class="d-flex align-items-center">
                <label for="pageInput" class="me-2 mb-0">Przejdź do strony:</label>
                <input type="number" min="1" max="@totalPages" value="@currentPage" name="page" id="pageInput" class="form-control form-control-sm me-2" style="width: 70px;" />
                <input type="hidden" name="pageSize" value="@pageSize" />
                <input type="hidden" name="searchQuery" value="@ViewData["search"]" />
                <button type="submit" class="btn btn-primary btn-sm">Idź</button>
            </form>
        </li>

        <li class="page-item ms-3">
            <form method="get" asp-action="Index" class="d-flex align-items-center">
                <label for="pageSizeSelect" class="me-2 mb-0">Liczba wierszy na stronie:</label>
                <select name="pageSize" id="pageSizeSelect" class="form-select form-select-sm" onchange="this.form.submit()">
                    @foreach (var size in allowedPageSizes)
                    {
                        <option value="@size" selected="@(size == pageSize ? "selected" : null)">@size</option>
                    }
                </select>
                <input type="hidden" name="page" value="1" />
                <input type="hidden" name="searchQuery" value="@ViewData["search"]" />
            </form>
        </li>
    </ul>
</nav>

@section Scripts {
    <script>
      /*  document.addEventListener('DOMContentLoaded', () => {
            let timeout;
            const form = document.getElementById('searchForm');
            if (!form) return;

            const input = form.querySelector('input[name="search"]');

            // Po załadowaniu strony, ustaw fokus na pole zapisane w localStorage
            const lastFocused = localStorage.getItem('lastFocusedSearch');
            if (lastFocused) {
                const inputToFocus = document.querySelector(`input[name="${lastFocused}"]`);
                if (inputToFocus) {
                    inputToFocus.focus();
                    const val = inputToFocus.value;
                    inputToFocus.value = '';
                    inputToFocus.value = val;
                }
                localStorage.removeItem('lastFocusedSearch');
            }

            input.addEventListener('input', () => {
                clearTimeout(timeout);
                localStorage.setItem('lastFocusedSearch', input.name);
                timeout = setTimeout(() => {
                    form.submit();
                }, 500);
            });
        });*/
    </script>
}
